version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: skz-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD:-skz_root_password}
      MYSQL_DATABASE: ${DATABASE_NAME:-ojs}
      MYSQL_USER: ${DATABASE_USER:-skz_user}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD:-skz_password}
    ports:
      - "${DATABASE_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./dbscripts/xml/upgrade/skz_agents_tables.xml:/docker-entrypoint-initdb.d/01-skz-tables.sql:ro
    networks:
      - skz-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: skz-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - skz-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
  # PostgreSQL for local development
  postgres:
    image: postgres:16-alpine
    container_name: skz-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-skz}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-skz_password}
      POSTGRES_DB: ${POSTGRES_DB:-ojs_skz}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - skz-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-skz} -d ${POSTGRES_DB:-ojs_skz}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API Gateway
  api-gateway:
    build:
      context: ./autonomous-agents-framework
      dockerfile: Dockerfile
    container_name: skz-api-gateway
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=${DATABASE_NAME:-ojs}
      - DATABASE_USER=${DATABASE_USER:-skz_user}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-skz_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_TYPE=api_gateway
    ports:
      - "${API_GATEWAY_PORT:-5000}:5000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - skz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/v1/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Research Discovery Agent
  research-agent:
    build:
      context: ./autonomous-agents-framework
      dockerfile: Dockerfile
    container_name: skz-research-agent
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=${DATABASE_NAME:-ojs}
      - DATABASE_USER=${DATABASE_USER:-skz_user}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-skz_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_TYPE=research_discovery
      - API_GATEWAY_URL=http://api-gateway:5000
      - INCI_API_KEY=${INCI_API_KEY:-}
      - USPTO_API_KEY=${USPTO_API_KEY:-}
      - PUBMED_API_KEY=${PUBMED_API_KEY:-}
    ports:
      - "${RESEARCH_AGENT_PORT:-5001}:5001"
    depends_on:
      - api-gateway
    networks:
      - skz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Submission Assistant Agent
  submission-agent:
    build:
      context: ./autonomous-agents-framework
      dockerfile: Dockerfile
    container_name: skz-submission-agent
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=${DATABASE_NAME:-ojs}
      - DATABASE_USER=${DATABASE_USER:-skz_user}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-skz_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_TYPE=submission_assistant
      - API_GATEWAY_URL=http://api-gateway:5000
    ports:
      - "${SUBMISSION_AGENT_PORT:-5002}:5002"
    depends_on:
      - api-gateway
    networks:
      - skz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Editorial Orchestration Agent
  editorial-agent:
    build:
      context: ./autonomous-agents-framework
      dockerfile: Dockerfile
    container_name: skz-editorial-agent
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=${DATABASE_NAME:-ojs}
      - DATABASE_USER=${DATABASE_USER:-skz_user}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-skz_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_TYPE=editorial_orchestration
      - API_GATEWAY_URL=http://api-gateway:5000
    ports:
      - "${EDITORIAL_AGENT_PORT:-5003}:5003"
    depends_on:
      - api-gateway
    networks:
      - skz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Review Coordination Agent
  review-agent:
    build:
      context: ./autonomous-agents-framework
      dockerfile: Dockerfile
    container_name: skz-review-agent
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=${DATABASE_NAME:-ojs}
      - DATABASE_USER=${DATABASE_USER:-skz_user}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-skz_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_TYPE=review_coordination
      - API_GATEWAY_URL=http://api-gateway:5000
    ports:
      - "${REVIEW_AGENT_PORT:-5004}:5004"
    depends_on:
      - api-gateway
    networks:
      - skz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Content Quality Agent
  quality-agent:
    build:
      context: ./autonomous-agents-framework
      dockerfile: Dockerfile
    container_name: skz-quality-agent
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=${DATABASE_NAME:-ojs}
      - DATABASE_USER=${DATABASE_USER:-skz_user}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-skz_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_TYPE=content_quality
      - API_GATEWAY_URL=http://api-gateway:5000
    ports:
      - "${QUALITY_AGENT_PORT:-5005}:5005"
    depends_on:
      - api-gateway
    networks:
      - skz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Publishing Production Agent
  publishing-agent:
    build:
      context: ./autonomous-agents-framework
      dockerfile: Dockerfile
    container_name: skz-publishing-agent
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=${DATABASE_NAME:-ojs}
      - DATABASE_USER=${DATABASE_USER:-skz_user}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-skz_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_TYPE=publishing_production
      - API_GATEWAY_URL=http://api-gateway:5000
    ports:
      - "${PUBLISHING_AGENT_PORT:-5006}:5006"
    depends_on:
      - api-gateway
    networks:
      - skz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Analytics & Monitoring Agent
  analytics-agent:
    build:
      context: ./autonomous-agents-framework
      dockerfile: Dockerfile
    container_name: skz-analytics-agent
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=${DATABASE_NAME:-ojs}
      - DATABASE_USER=${DATABASE_USER:-skz_user}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-skz_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_TYPE=analytics_monitoring
      - API_GATEWAY_URL=http://api-gateway:5000
    ports:
      - "${ANALYTICS_AGENT_PORT:-5007}:5007"
    depends_on:
      - api-gateway
    networks:
      - skz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5007/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  postgres_data:

networks:
  skz-network:
    driver: bridge
